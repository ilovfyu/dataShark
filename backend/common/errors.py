from enum import IntEnum, Enum
from fastapi import status

class ErrorCode(IntEnum):

    SUCCESS = status.HTTP_200_OK

    BAD_REQUEST = status.HTTP_400_BAD_REQUEST
    UNAUTHORIZED = status.HTTP_401_UNAUTHORIZED
    FORBIDDEN = status.HTTP_403_FORBIDDEN
    NOT_FOUND = status.HTTP_404_NOT_FOUND
    INTERNAL_SERVER_ERROR = status.HTTP_500_INTERNAL_SERVER_ERROR
    NOT_IMPLEMENTED = status.HTTP_501_NOT_IMPLEMENTED
    SERVICE_UNAVAILABLE = status.HTTP_503_SERVICE_UNAVAILABLE
    GATEWAY_TIMEOUT = status.HTTP_504_GATEWAY_TIMEOUT
    BAD_GATEWAY = status.HTTP_502_BAD_GATEWAY
    BAD_ENTITY = status.HTTP_422_UNPROCESSABLE_ENTITY
    UNKNOWN_ERROR = 999





class BussinessCode(Enum):

    BUSSINESS_NORMAL_ERROR = (000000, "BUSSINESS_NORMAL_ERROR")
    EXIST_ERROR = (100010, "EXIST_ERROR")
    NOT_EXIST_ERROR = (100011, "NOT_EXIST_ERROR")
    VERIFY_PARAM_ERROR = (100012, "VERIFY_PARAM_ERROR")
    UNAUTHORIZED_ERROR = (100013, "UNAUTHORIZED_ERROR")
    FORBIDDEN_ERROR = (100014, "FORBIDDEN_ERROR")
    STATUS_ERROR = (100015, "STATUS_ERROR")

    @property
    def code(self):
        return self.value[0]

    @property
    def message(self):
        return self.value[1]